name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  schedule:
    # Run nightly at 00:00 UTC (equivalent to CircleCI's nightly job)
    - cron: '0 0 * * *'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'

      - name: Get cache key
        id: cache-key
        run: echo "value=${{ runner.os }}-node-${{ hashFiles('**/package.json', '**/yarn.lock') }}" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ steps.cache-key.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check Node.js version
        run: node -v

      - name: Check Yarn version
        run: yarn -v

      - name: Install dependencies
        run: yarn

      - name: Configure Yarn
        run: yarn config set ignore-engines true

      - name: Bootstrap packages
        run: yarn bootstrap

      - name: List packages (optional)
        run: yarn list || true

  icons-svg:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bootstrap packages
        run: yarn bootstrap

      - name: Generate icons
        run: yarn icons:generate

      - name: Build icons
        run: yarn icons:build

      - name: Test icons
        run: yarn icons:test

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/icons-svg/es
            packages/icons-svg/lib
            packages/icons-svg/inline-svg
          key: icons-svg-build-${{ github.sha }}

  icons-react:
    runs-on: ubuntu-latest
    needs: [setup, icons-svg]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/icons-svg/es
            packages/icons-svg/lib
            packages/icons-svg/inline-svg
          key: icons-svg-build-${{ github.sha }}

      - name: Bootstrap packages
        run: yarn bootstrap

      - name: Test React icons
        run: yarn react:ci

  icons-angular:
    runs-on: ubuntu-latest
    needs: [setup, icons-svg]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/icons-svg/es
            packages/icons-svg/lib
            packages/icons-svg/inline-svg
          key: icons-svg-build-${{ github.sha }}

      - name: Bootstrap packages
        run: yarn bootstrap

      - name: Test Angular icons
        run: yarn angular:ci
        env:
          # Ensure Chrome runs in headless mode
          CHROME_BIN: /usr/bin/google-chrome

  icons-vue:
    runs-on: ubuntu-latest
    needs: [setup, icons-svg]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/icons-svg/es
            packages/icons-svg/lib
            packages/icons-svg/inline-svg
          key: icons-svg-build-${{ github.sha }}

      - name: Bootstrap packages
        run: yarn bootstrap

      - name: Test Vue icons
        run: yarn vue:ci

  icons-react-native:
    runs-on: ubuntu-latest
    needs: [setup, icons-svg]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/icons-svg/es
            packages/icons-svg/lib
            packages/icons-svg/inline-svg
          key: icons-svg-build-${{ github.sha }}

      - name: Bootstrap packages
        run: yarn bootstrap

      - name: Test React Native icons
        run: yarn react-native:ci